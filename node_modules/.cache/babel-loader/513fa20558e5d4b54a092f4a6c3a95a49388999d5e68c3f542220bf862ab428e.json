{"ast":null,"code":"var _jsxFileName = \"/Users/huangtiantian/Desktop/5610/project2/src/pages/GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport './GamePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createEmptyGrid = (rows, cols) => {\n  return Array.from({\n    length: rows\n  }).map(() => Array.from({\n    length: cols\n  }).fill({\n    alive: 0,\n    generation: 0\n  }));\n};\nconst createRandomGrid = (rows, cols) => {\n  const grid = createEmptyGrid(rows, cols);\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      grid[i][j] = {\n        alive: Math.random() < 0.05 ? 1 : 0,\n        generation: 0\n      };\n    }\n  }\n  return grid;\n};\nconst GamePage = () => {\n  _s();\n  const defaultSize = 20;\n  const [gridSize, setGridSize] = useState({\n    rows: defaultSize,\n    cols: defaultSize\n  });\n  const [inputValues, setInputValues] = useState({\n    rows: '',\n    cols: ''\n  });\n  const [grid, setGrid] = useState(() => createRandomGrid(defaultSize, defaultSize));\n  const [inputError, setInputError] = useState('');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const playRef = useRef(isPlaying);\n  playRef.current = isPlaying;\n  const handleSizeChange = (e, dimension) => {\n    setInputValues({\n      ...inputValues,\n      [dimension]: e.target.value\n    });\n  };\n  const validateAndSetSize = () => {\n    const rows = parseInt(inputValues.rows, 10);\n    const cols = parseInt(inputValues.cols, 10);\n    if (!isNaN(rows) && rows >= 3 && rows <= 40 && !isNaN(cols) && cols >= 3 && cols <= 40) {\n      setGridSize({\n        rows,\n        cols\n      });\n      setGrid(createRandomGrid(rows, cols));\n      setInputError('');\n    } else {\n      setInputError('Please enter numbers between 3 and 40 for both rows and cols.');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    validateAndSetSize();\n  };\n  const toggleCellState = (row, col) => {\n    const newGrid = JSON.parse(JSON.stringify(grid));\n    newGrid[row][col].alive = grid[row][col].alive ? 0 : 1;\n    setGrid(newGrid);\n  };\n  const nextGeneration = useCallback(() => {\n    if (!playRef.current) return;\n    setGrid(currentGrid => {\n      return currentGrid.map((row, i) => row.map((cell, j) => {\n        let liveNeighbors = 0;\n        const neighbors = [[i - 1, j - 1], [i - 1, j], [i - 1, j + 1], [i, j - 1], [i, j + 1], [i + 1, j - 1], [i + 1, j], [i + 1, j + 1]];\n        neighbors.forEach(([x, y]) => {\n          if (x >= 0 && x < gridSize.rows && y >= 0 && y < gridSize.cols) {\n            var _currentGrid$x$y;\n            liveNeighbors += ((_currentGrid$x$y = currentGrid[x][y]) === null || _currentGrid$x$y === void 0 ? void 0 : _currentGrid$x$y.alive) || 0;\n          }\n        });\n        if (cell.alive) {\n          if (liveNeighbors < 2 || liveNeighbors > 3) {\n            return {\n              alive: 0,\n              generation: 0\n            };\n          }\n          return {\n            ...cell,\n            generation: cell.generation + 1\n          };\n        } else {\n          if (liveNeighbors === 3) {\n            return {\n              alive: 1,\n              generation: 1\n            };\n          }\n          return cell;\n        }\n      }));\n    });\n  }, [gridSize.rows, gridSize.cols]);\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        nextGeneration();\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, nextGeneration]);\n  const resetGrid = () => {\n    setGrid(createRandomGrid(gridSize.rows, gridSize.cols));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: gridSize.rows,\n        onChange: e => handleSizeChange(e, 'rows')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: gridSize.cols,\n        onChange: e => handleSizeChange(e, 'cols')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Grid Size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), inputError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: inputError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      style: {\n        gridTemplateColumns: `repeat(${gridSize.cols}, 20px)`\n      },\n      children: grid.map((row, i) => row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => toggleCellState(i, j),\n        className: `cell ${cell.alive ? 'alive' : 'dead'}`,\n        style: {\n          backgroundColor: cell.alive ? `hsl(${Math.min(120, cell.generation * 12)}, 100%, 50%)` : undefined\n        }\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsPlaying(!isPlaying),\n      children: isPlaying ? \"Stop\" : \"Autoplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextGeneration,\n      children: \"Next Generation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGrid,\n      children: \"Reset Grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"xlyPZDpQlbacr8YZEpGJtFEFDmI=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","jsxDEV","_jsxDEV","createEmptyGrid","rows","cols","Array","from","length","map","fill","alive","generation","createRandomGrid","grid","i","j","Math","random","GamePage","_s","defaultSize","gridSize","setGridSize","inputValues","setInputValues","setGrid","inputError","setInputError","isPlaying","setIsPlaying","playRef","current","handleSizeChange","e","dimension","target","value","validateAndSetSize","parseInt","isNaN","handleSubmit","preventDefault","toggleCellState","row","col","newGrid","JSON","parse","stringify","nextGeneration","currentGrid","cell","liveNeighbors","neighbors","forEach","x","y","_currentGrid$x$y","interval","setInterval","clearInterval","resetGrid","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","color","gridTemplateColumns","onClick","backgroundColor","min","undefined","_c","$RefreshReg$"],"sources":["/Users/huangtiantian/Desktop/5610/project2/src/pages/GamePage.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport './GamePage.css';\n\nconst createEmptyGrid = (rows, cols) => {\n  return Array.from({ length: rows }).map(() => Array.from({ length: cols }).fill({ alive: 0, generation: 0 }));\n};\n\nconst createRandomGrid = (rows, cols) => {\n  const grid = createEmptyGrid(rows, cols);\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      grid[i][j] = { alive: Math.random() < 0.05 ? 1 : 0, generation: 0 };\n    }\n  }\n  return grid;\n};\n\nconst GamePage = () => {\n  const defaultSize = 20;\n  const [gridSize, setGridSize] = useState({ rows: defaultSize, cols: defaultSize });\n  const [inputValues, setInputValues] = useState({ rows: '', cols: '' });\n  const [grid, setGrid] = useState(() => createRandomGrid(defaultSize, defaultSize));\n  const [inputError, setInputError] = useState('');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const playRef = useRef(isPlaying);\n  playRef.current = isPlaying;\n\n  const handleSizeChange = (e, dimension) => {\n    setInputValues({ ...inputValues, [dimension]: e.target.value });\n  };\n\n  const validateAndSetSize = () => {\n    const rows = parseInt(inputValues.rows, 10);\n    const cols = parseInt(inputValues.cols, 10);\n    if (!isNaN(rows) && rows >= 3 && rows <= 40 && !isNaN(cols) && cols >= 3 && cols <= 40) {\n      setGridSize({ rows, cols });\n      setGrid(createRandomGrid(rows, cols));\n      setInputError('');\n    } else {\n      setInputError('Please enter numbers between 3 and 40 for both rows and cols.');\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    validateAndSetSize();\n  };\n  \n  const toggleCellState = (row, col) => {\n    const newGrid = JSON.parse(JSON.stringify(grid));\n    newGrid[row][col].alive = grid[row][col].alive ? 0 : 1;\n    setGrid(newGrid);\n  };\n\n  const nextGeneration = useCallback(() => {\n    if (!playRef.current) return;\n    setGrid((currentGrid) => {\n      return currentGrid.map((row, i) =>\n        row.map((cell, j) => {\n          let liveNeighbors = 0;\n          const neighbors = [\n            [i - 1, j - 1], [i - 1, j], [i - 1, j + 1],\n            [i, j - 1],               [i, j + 1],\n            [i + 1, j - 1], [i + 1, j], [i + 1, j + 1],\n          ];\n          \n          neighbors.forEach(([x, y]) => {\n            if (x >= 0 && x < gridSize.rows && y >= 0 && y < gridSize.cols) {\n              liveNeighbors += currentGrid[x][y]?.alive || 0;\n            }\n          });\n\n          if (cell.alive) {\n            if (liveNeighbors < 2 || liveNeighbors > 3) {\n              return { alive: 0, generation: 0 };\n            }\n            return { ...cell, generation: cell.generation + 1 };\n          } else {\n            if (liveNeighbors === 3) {\n              return { alive: 1, generation: 1 };\n            }\n            return cell;\n          }\n        })\n      );\n    });\n  }, [gridSize.rows, gridSize.cols]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        nextGeneration();\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, nextGeneration]);\n\n  const resetGrid = () => {\n    setGrid(createRandomGrid(gridSize.rows, gridSize.cols));\n  };\n\n  return (\n    <div className=\"game-page\">\n      <form onSubmit={handleSubmit}>\n        <input type=\"number\" value={gridSize.rows} onChange={e => handleSizeChange(e, 'rows')} />\n        <input type=\"number\" value={gridSize.cols} onChange={e => handleSizeChange(e, 'cols')} />\n        <button type=\"submit\">Update Grid Size</button>\n      </form>\n      {inputError && <div style={{ color: 'red' }}>{inputError}</div>}\n      <div className=\"game-board\" style={{ gridTemplateColumns: `repeat(${gridSize.cols}, 20px)` }}>\n        {grid.map((row, i) =>\n          row.map((cell, j) => (\n            <div\n              key={`${i}-${j}`}\n              onClick={() => toggleCellState(i, j)}\n              className={`cell ${cell.alive ? 'alive' : 'dead'}`}\n              style={{ backgroundColor: cell.alive ? `hsl(${Math.min(120, cell.generation * 12)}, 100%, 50%)` : undefined }}\n            />\n          ))\n        )}\n      </div>\n      <button onClick={() => setIsPlaying(!isPlaying)}>{isPlaying ? \"Stop\" : \"Autoplay\"}</button>\n      <button onClick={nextGeneration}>Next Generation</button>\n      <button onClick={resetGrid}>Reset Grid</button>\n    </div>\n  );\n};\n\nexport default GamePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,eAAe,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EACtC,OAAOC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEJ;EAAK,CAAC,CAAC,CAACK,GAAG,CAAC,MAAMH,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEH;EAAK,CAAC,CAAC,CAACK,IAAI,CAAC;IAAEC,KAAK,EAAE,CAAC;IAAEC,UAAU,EAAE;EAAE,CAAC,CAAC,CAAC;AAC/G,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAACT,IAAI,EAAEC,IAAI,KAAK;EACvC,MAAMS,IAAI,GAAGX,eAAe,CAACC,IAAI,EAAEC,IAAI,CAAC;EACxC,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,IAAI,EAAEW,CAAC,EAAE,EAAE;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,IAAI,EAAEW,CAAC,EAAE,EAAE;MAC7BF,IAAI,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG;QAAEL,KAAK,EAAEM,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;QAAEN,UAAU,EAAE;MAAE,CAAC;IACrE;EACF;EACA,OAAOE,IAAI;AACb,CAAC;AAED,MAAMK,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC;IAAEO,IAAI,EAAEiB,WAAW;IAAEhB,IAAI,EAAEgB;EAAY,CAAC,CAAC;EAClF,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC;IAAEO,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACtE,MAAM,CAACS,IAAI,EAAEY,OAAO,CAAC,GAAG7B,QAAQ,CAAC,MAAMgB,gBAAgB,CAACQ,WAAW,EAAEA,WAAW,CAAC,CAAC;EAClF,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMkC,OAAO,GAAG/B,MAAM,CAAC6B,SAAS,CAAC;EACjCE,OAAO,CAACC,OAAO,GAAGH,SAAS;EAE3B,MAAMI,gBAAgB,GAAGA,CAACC,CAAC,EAAEC,SAAS,KAAK;IACzCV,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACW,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC;IAAM,CAAC,CAAC;EACjE,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMlC,IAAI,GAAGmC,QAAQ,CAACf,WAAW,CAACpB,IAAI,EAAE,EAAE,CAAC;IAC3C,MAAMC,IAAI,GAAGkC,QAAQ,CAACf,WAAW,CAACnB,IAAI,EAAE,EAAE,CAAC;IAC3C,IAAI,CAACmC,KAAK,CAACpC,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,EAAE,IAAI,CAACoC,KAAK,CAACnC,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,EAAE,EAAE;MACtFkB,WAAW,CAAC;QAAEnB,IAAI;QAAEC;MAAK,CAAC,CAAC;MAC3BqB,OAAO,CAACb,gBAAgB,CAACT,IAAI,EAAEC,IAAI,CAAC,CAAC;MACrCuB,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,MAAM;MACLA,aAAa,CAAC,+DAA+D,CAAC;IAChF;EACF,CAAC;EAED,MAAMa,YAAY,GAAIP,CAAC,IAAK;IAC1BA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClBJ,kBAAkB,CAAC,CAAC;EACtB,CAAC;EAED,MAAMK,eAAe,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACpC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACnC,IAAI,CAAC,CAAC;IAChDgC,OAAO,CAACF,GAAG,CAAC,CAACC,GAAG,CAAC,CAAClC,KAAK,GAAGG,IAAI,CAAC8B,GAAG,CAAC,CAACC,GAAG,CAAC,CAAClC,KAAK,GAAG,CAAC,GAAG,CAAC;IACtDe,OAAO,CAACoB,OAAO,CAAC;EAClB,CAAC;EAED,MAAMI,cAAc,GAAGpD,WAAW,CAAC,MAAM;IACvC,IAAI,CAACiC,OAAO,CAACC,OAAO,EAAE;IACtBN,OAAO,CAAEyB,WAAW,IAAK;MACvB,OAAOA,WAAW,CAAC1C,GAAG,CAAC,CAACmC,GAAG,EAAE7B,CAAC,KAC5B6B,GAAG,CAACnC,GAAG,CAAC,CAAC2C,IAAI,EAAEpC,CAAC,KAAK;QACnB,IAAIqC,aAAa,GAAG,CAAC;QACrB,MAAMC,SAAS,GAAG,CAChB,CAACvC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,EAAE,CAACD,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC,EAAE,CAACD,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,EAC1C,CAACD,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,EAAgB,CAACD,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,EACpC,CAACD,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,EAAE,CAACD,CAAC,GAAG,CAAC,EAAEC,CAAC,CAAC,EAAE,CAACD,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,CAAC,CAC3C;QAEDsC,SAAS,CAACC,OAAO,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAK;UAC5B,IAAID,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGlC,QAAQ,CAAClB,IAAI,IAAIqD,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGnC,QAAQ,CAACjB,IAAI,EAAE;YAAA,IAAAqD,gBAAA;YAC9DL,aAAa,IAAI,EAAAK,gBAAA,GAAAP,WAAW,CAACK,CAAC,CAAC,CAACC,CAAC,CAAC,cAAAC,gBAAA,uBAAjBA,gBAAA,CAAmB/C,KAAK,KAAI,CAAC;UAChD;QACF,CAAC,CAAC;QAEF,IAAIyC,IAAI,CAACzC,KAAK,EAAE;UACd,IAAI0C,aAAa,GAAG,CAAC,IAAIA,aAAa,GAAG,CAAC,EAAE;YAC1C,OAAO;cAAE1C,KAAK,EAAE,CAAC;cAAEC,UAAU,EAAE;YAAE,CAAC;UACpC;UACA,OAAO;YAAE,GAAGwC,IAAI;YAAExC,UAAU,EAAEwC,IAAI,CAACxC,UAAU,GAAG;UAAE,CAAC;QACrD,CAAC,MAAM;UACL,IAAIyC,aAAa,KAAK,CAAC,EAAE;YACvB,OAAO;cAAE1C,KAAK,EAAE,CAAC;cAAEC,UAAU,EAAE;YAAE,CAAC;UACpC;UACA,OAAOwC,IAAI;QACb;MACF,CAAC,CACH,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC9B,QAAQ,CAAClB,IAAI,EAAEkB,QAAQ,CAACjB,IAAI,CAAC,CAAC;EAElCN,SAAS,CAAC,MAAM;IACd,IAAI8B,SAAS,EAAE;MACb,MAAM8B,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCV,cAAc,CAAC,CAAC;MAClB,CAAC,EAAE,GAAG,CAAC;MACP,OAAO,MAAMW,aAAa,CAACF,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAAC9B,SAAS,EAAEqB,cAAc,CAAC,CAAC;EAE/B,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACtBpC,OAAO,CAACb,gBAAgB,CAACS,QAAQ,CAAClB,IAAI,EAAEkB,QAAQ,CAACjB,IAAI,CAAC,CAAC;EACzD,CAAC;EAED,oBACEH,OAAA;IAAK6D,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB9D,OAAA;MAAM+D,QAAQ,EAAExB,YAAa;MAAAuB,QAAA,gBAC3B9D,OAAA;QAAOgE,IAAI,EAAC,QAAQ;QAAC7B,KAAK,EAAEf,QAAQ,CAAClB,IAAK;QAAC+D,QAAQ,EAAEjC,CAAC,IAAID,gBAAgB,CAACC,CAAC,EAAE,MAAM;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzFrE,OAAA;QAAOgE,IAAI,EAAC,QAAQ;QAAC7B,KAAK,EAAEf,QAAQ,CAACjB,IAAK;QAAC8D,QAAQ,EAAEjC,CAAC,IAAID,gBAAgB,CAACC,CAAC,EAAE,MAAM;MAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzFrE,OAAA;QAAQgE,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACN5C,UAAU,iBAAIzB,OAAA;MAAKsE,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAT,QAAA,EAAErC;IAAU;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC/DrE,OAAA;MAAK6D,SAAS,EAAC,YAAY;MAACS,KAAK,EAAE;QAAEE,mBAAmB,EAAG,UAASpD,QAAQ,CAACjB,IAAK;MAAS,CAAE;MAAA2D,QAAA,EAC1FlD,IAAI,CAACL,GAAG,CAAC,CAACmC,GAAG,EAAE7B,CAAC,KACf6B,GAAG,CAACnC,GAAG,CAAC,CAAC2C,IAAI,EAAEpC,CAAC,kBACdd,OAAA;QAEEyE,OAAO,EAAEA,CAAA,KAAMhC,eAAe,CAAC5B,CAAC,EAAEC,CAAC,CAAE;QACrC+C,SAAS,EAAG,QAAOX,IAAI,CAACzC,KAAK,GAAG,OAAO,GAAG,MAAO,EAAE;QACnD6D,KAAK,EAAE;UAAEI,eAAe,EAAExB,IAAI,CAACzC,KAAK,GAAI,OAAMM,IAAI,CAAC4D,GAAG,CAAC,GAAG,EAAEzB,IAAI,CAACxC,UAAU,GAAG,EAAE,CAAE,cAAa,GAAGkE;QAAU;MAAE,GAHxG,GAAE/D,CAAE,IAAGC,CAAE,EAAC;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIjB,CACF,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNrE,OAAA;MAAQyE,OAAO,EAAEA,CAAA,KAAM7C,YAAY,CAAC,CAACD,SAAS,CAAE;MAAAmC,QAAA,EAAEnC,SAAS,GAAG,MAAM,GAAG;IAAU;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC3FrE,OAAA;MAAQyE,OAAO,EAAEzB,cAAe;MAAAc,QAAA,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDrE,OAAA;MAAQyE,OAAO,EAAEb,SAAU;MAAAE,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACnD,EAAA,CA7GID,QAAQ;AAAA4D,EAAA,GAAR5D,QAAQ;AA+Gd,eAAeA,QAAQ;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}