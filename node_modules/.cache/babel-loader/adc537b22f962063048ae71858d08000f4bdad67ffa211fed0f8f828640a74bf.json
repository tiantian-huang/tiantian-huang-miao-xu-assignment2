{"ast":null,"code":"var _jsxFileName = \"/Users/huangtiantian/Desktop/5610/project2/src/pages/GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from 'react';\nimport './GamePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createEmptyGrid = (rows, cols) => {\n  return Array.from({\n    length: rows\n  }).map(() => Array.from({\n    length: cols\n  }).fill({\n    alive: 0,\n    generation: 0\n  }));\n};\nconst createRandomGrid = (rows, cols) => {\n  const grid = createEmptyGrid(rows, cols);\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      grid[i][j] = {\n        alive: Math.random() < 0.05 ? 1 : 0,\n        generation: 0\n      };\n    }\n  }\n  return grid;\n};\nconst GamePage = () => {\n  _s();\n  const [gridSize, setGridSize] = useState({\n    rows: 20,\n    cols: 20\n  });\n  const [grid, setGrid] = useState(() => createRandomGrid(20, 20));\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [inputError, setInputError] = useState(\"\");\n  const playRef = useRef(isPlaying);\n  playRef.current = isPlaying;\n  const handleSizeChange = (e, dimension) => {\n    const size = parseInt(e.target.value, 10);\n    if (size >= 3 && size <= 40) {\n      setGridSize(prev => ({\n        ...prev,\n        [dimension]: size\n      }));\n      setInputError(\"\"); // 清除错误消息\n    } else {\n      setInputError(\"请输入一个在3到40之间的数字\");\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!inputError) {\n      setGrid(createRandomGrid(gridSize.rows, gridSize.cols));\n    }\n  };\n  const toggleCellState = (row, col) => {\n    const newGrid = JSON.parse(JSON.stringify(grid));\n    newGrid[row][col].alive = grid[row][col].alive ? 0 : 1;\n    setGrid(newGrid);\n  };\n  const nextGeneration = useCallback(() => {\n    if (!playRef.current) return;\n    setGrid(currentGrid => {\n      return currentGrid.map((row, i) => row.map((cell, j) => {\n        let liveNeighbors = 0;\n        const neighbors = [[i - 1, j - 1], [i - 1, j], [i - 1, j + 1], [i, j - 1], [i, j + 1], [i + 1, j - 1], [i + 1, j], [i + 1, j + 1]];\n        neighbors.forEach(([x, y]) => {\n          if (x >= 0 && x < gridSize.rows && y >= 0 && y < gridSize.cols && currentGrid[x][y].alive) {\n            liveNeighbors++;\n          }\n        });\n        if (cell.alive) {\n          if (liveNeighbors < 2 || liveNeighbors > 3) {\n            return {\n              ...cell,\n              alive: 0,\n              generation: 0\n            }; // Cell dies\n          }\n          return {\n            ...cell,\n            generation: cell.generation + 1\n          }; // Cell lives and ages\n        } else {\n          if (liveNeighbors === 3) {\n            return {\n              alive: 1,\n              generation: 1\n            }; // Cell becomes alive\n          }\n          return cell; // Cell remains dead\n        }\n      }));\n    });\n  }, [gridSize.rows, gridSize.cols]);\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        nextGeneration();\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, nextGeneration]);\n  const resetGrid = () => {\n    setGrid(createRandomGrid(gridSize.rows, gridSize.cols));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: gridSize.rows,\n        onChange: e => handleSizeChange(e, 'rows')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: gridSize.cols,\n        onChange: e => handleSizeChange(e, 'cols')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u66F4\\u65B0\\u7F51\\u683C\\u5927\\u5C0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), inputError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: inputError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      style: {\n        gridTemplateColumns: `repeat(${gridSize.cols}, 20px)`\n      },\n      children: grid.map((row, i) => row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => toggleCellState(i, j),\n        className: `cell ${cell.alive ? 'alive' : 'dead'}`,\n        style: {\n          backgroundColor: cell.alive ? `hsl(${Math.min(cell.generation * 10, 120)}, 100%, 50%)` : undefined\n        }\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsPlaying(!isPlaying),\n      children: isPlaying ? \"停止\" : \"自动播放\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextGeneration,\n      children: \"\\u4E0B\\u4E00\\u4EE3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGrid,\n      children: \"\\u91CD\\u7F6E\\u7F51\\u683C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"yh8RywhbjleoXY2vcv4ZGc1/71o=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useCallback","useRef","jsxDEV","_jsxDEV","createEmptyGrid","rows","cols","Array","from","length","map","fill","alive","generation","createRandomGrid","grid","i","j","Math","random","GamePage","_s","gridSize","setGridSize","setGrid","isPlaying","setIsPlaying","inputError","setInputError","playRef","current","handleSizeChange","e","dimension","size","parseInt","target","value","prev","handleSubmit","preventDefault","toggleCellState","row","col","newGrid","JSON","parse","stringify","nextGeneration","currentGrid","cell","liveNeighbors","neighbors","forEach","x","y","useEffect","interval","setInterval","clearInterval","resetGrid","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","gridTemplateColumns","onClick","backgroundColor","min","undefined","_c","$RefreshReg$"],"sources":["/Users/huangtiantian/Desktop/5610/project2/src/pages/GamePage.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport './GamePage.css';\n\nconst createEmptyGrid = (rows, cols) => {\n  return Array.from({ length: rows }).map(() => Array.from({ length: cols }).fill({ alive: 0, generation: 0 }));\n};\n\nconst createRandomGrid = (rows, cols) => {\n  const grid = createEmptyGrid(rows, cols);\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      grid[i][j] = { alive: Math.random() < 0.05 ? 1 : 0, generation: 0 };\n    }\n  }\n  return grid;\n};\n\nconst GamePage = () => {\n  const [gridSize, setGridSize] = useState({ rows: 20, cols: 20 });\n  const [grid, setGrid] = useState(() => createRandomGrid(20, 20));\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [inputError, setInputError] = useState(\"\");\n  const playRef = useRef(isPlaying);\n  playRef.current = isPlaying;\n\n  const handleSizeChange = (e, dimension) => {\n    const size = parseInt(e.target.value, 10);\n    if (size >= 3 && size <= 40) {\n      setGridSize(prev => ({ ...prev, [dimension]: size }));\n      setInputError(\"\"); // 清除错误消息\n    } else {\n      setInputError(\"请输入一个在3到40之间的数字\");\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!inputError) {\n      setGrid(createRandomGrid(gridSize.rows, gridSize.cols));\n    }\n  };\n\n  const toggleCellState = (row, col) => {\n    const newGrid = JSON.parse(JSON.stringify(grid));\n    newGrid[row][col].alive = grid[row][col].alive ? 0 : 1;\n    setGrid(newGrid);\n  };\n\n  const nextGeneration = useCallback(() => {\n    if (!playRef.current) return;\n    setGrid((currentGrid) => {\n      return currentGrid.map((row, i) =>\n        row.map((cell, j) => {\n          let liveNeighbors = 0;\n          const neighbors = [\n            [i - 1, j - 1], [i - 1, j], [i - 1, j + 1],\n            [i, j - 1],               [i, j + 1],\n            [i + 1, j - 1], [i + 1, j], [i + 1, j + 1],\n          ];\n          \n          neighbors.forEach(([x, y]) => {\n            if (x >= 0 && x < gridSize.rows && y >= 0 && y < gridSize.cols && currentGrid[x][y].alive) {\n              liveNeighbors++;\n            }\n          });\n\n          if (cell.alive) {\n            if (liveNeighbors < 2 || liveNeighbors > 3) {\n              return { ...cell, alive: 0, generation: 0 }; // Cell dies\n            }\n            return { ...cell, generation: cell.generation + 1 }; // Cell lives and ages\n          } else {\n            if (liveNeighbors === 3) {\n              return { alive: 1, generation: 1 }; // Cell becomes alive\n            }\n            return cell; // Cell remains dead\n          }\n        })\n      );\n    });\n  }, [gridSize.rows, gridSize.cols]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        nextGeneration();\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, nextGeneration]);\n\n  const resetGrid = () => {\n    setGrid(createRandomGrid(gridSize.rows, gridSize.cols));\n  };\n\n  return (\n    <div className=\"game-page\">\n      <form onSubmit={handleSubmit}>\n        <input type=\"number\" value={gridSize.rows} onChange={e => handleSizeChange(e, 'rows')} />\n        <input type=\"number\" value={gridSize.cols} onChange={e => handleSizeChange(e, 'cols')} />\n        <button type=\"submit\">更新网格大小</button>\n      </form>\n      {inputError && <p className=\"error-message\">{inputError}</p>}\n      <div className=\"game-board\" style={{ gridTemplateColumns: `repeat(${gridSize.cols}, 20px)` }}>\n        {grid.map((row, i) =>\n          row.map((cell, j) => (\n            <div\n              key={`${i}-${j}`}\n              onClick={() => toggleCellState(i, j)}\n              className={`cell ${cell.alive ? 'alive' : 'dead'}`}\n              style={{ backgroundColor: cell.alive ? `hsl(${Math.min(cell.generation * 10, 120)}, 100%, 50%)` : undefined }}\n            />\n          ))\n        )}\n      </div>\n      <button onClick={() => setIsPlaying(!isPlaying)}>{isPlaying ? \"停止\" : \"自动播放\"}</button>\n      <button onClick={nextGeneration}>下一代</button>\n      <button onClick={resetGrid}>重置网格</button>\n      {/* 在这里添加显示当前活细胞数量的代码 */}\n    </div>\n  );\n};\n\nexport default GamePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}